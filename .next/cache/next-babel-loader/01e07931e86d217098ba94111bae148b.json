{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport withApollo from '../../lib/withApollo';\nimport Layout from '../../components/Layout';\nimport { useRouter } from 'next/router';\nimport VideoItem from '../../components/VideoItem';\n\nconst Profile = () => {\n  const router = useRouter();\n  const {\n    userId\n  } = router.query;\n  const USER_QUERY = gql`\n    query UserQuery{\n      user(id:\"${userId}\") {\n        firstName,\n        lastName,\n        _id,\n        ownedVideos {\n          thumbnailURL,\n          title,\n          videoURL\n        },\n        playlistComments{\n          content\n        }\n      }\n    }\n  `;\n  const {\n    loading,\n    data\n  } = useQuery(USER_QUERY);\n\n  if (loading || !data) {\n    return __jsx(\"h1\", null, \"loading...\");\n  }\n\n  return __jsx(Layout, null, __jsx(\"section\", {\n    id: \"user-info\",\n    className: \"container\"\n  }, __jsx(\"h2\", null, data.user.firstName, \" \", data.user.lastName)), __jsx(\"section\", {\n    id: \"playlist\"\n  }, __jsx(\"h2\", null, \"Playlist\"), data.user.ownedVideos.map(video => __jsx(VideoItem, {\n    video: video\n  }))));\n};\n\nexport default withApollo(Profile);","map":{"version":3,"sources":["C:/Coding/MyProjects/coders-jukebox/pages/profile/[userId].js"],"names":["gql","useQuery","withApollo","Layout","useRouter","VideoItem","Profile","router","userId","query","USER_QUERY","loading","data","user","firstName","lastName","ownedVideos","map","video"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;AAIA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAaD,MAAM,CAACE,KAA1B;AAEA,QAAMC,UAAU,GAAGV,GAAI;;iBAERQ,MAAO;;;;;;;;;;;;;;GAFtB;AAkBA,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBX,QAAQ,CAACS,UAAD,CAAlC;;AAEA,MAAIC,OAAO,IAAI,CAACC,IAAhB,EAAsB;AACpB,WAAO,+BAAP;AACD;;AAED,SACE,MAAC,MAAD,QACE;AAAS,IAAA,EAAE,EAAC,WAAZ;AAAwB,IAAA,SAAS,EAAC;AAAlC,KACE,kBAAKA,IAAI,CAACC,IAAL,CAAUC,SAAf,OAA2BF,IAAI,CAACC,IAAL,CAAUE,QAArC,CADF,CADF,EAIE;AAAS,IAAA,EAAE,EAAC;AAAZ,KACE,6BADF,EAEGH,IAAI,CAACC,IAAL,CAAUG,WAAV,CAAsBC,GAAtB,CAA0BC,KAAK,IAC9B,MAAC,SAAD;AAAW,IAAA,KAAK,EAAEA;AAAlB,IADD,CAFH,CAJF,CADF;AAaD,CAzCD;;AA2CA,eAAehB,UAAU,CAACI,OAAD,CAAzB","sourcesContent":["import gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport withApollo from '../../lib/withApollo';\r\nimport Layout from '../../components/Layout';\r\nimport { useRouter } from 'next/router'\r\nimport VideoItem from '../../components/VideoItem';\r\n\r\n\r\n\r\nconst Profile = () => {\r\n  const router = useRouter()\r\n  const { userId } = router.query\r\n\r\n  const USER_QUERY = gql`\r\n    query UserQuery{\r\n      user(id:\"${userId}\") {\r\n        firstName,\r\n        lastName,\r\n        _id,\r\n        ownedVideos {\r\n          thumbnailURL,\r\n          title,\r\n          videoURL\r\n        },\r\n        playlistComments{\r\n          content\r\n        }\r\n      }\r\n    }\r\n  `;\r\n\r\n  const { loading, data } = useQuery(USER_QUERY);\r\n\r\n  if (loading || !data) {\r\n    return <h1>loading...</h1>;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <section id=\"user-info\" className=\"container\">\r\n        <h2>{data.user.firstName} {data.user.lastName}</h2>\r\n      </section>\r\n      <section id=\"playlist\">\r\n        <h2>Playlist</h2>\r\n        {data.user.ownedVideos.map(video => (\r\n          <VideoItem video={video} />\r\n        ))}\r\n      </section>  \r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default withApollo(Profile);"]},"metadata":{},"sourceType":"module"}
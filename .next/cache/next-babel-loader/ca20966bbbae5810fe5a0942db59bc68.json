{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport withApollo from '../lib/withApollo'; // import { getDataFromTree } from '@apollo/react-ssr';\n\nimport Layout from '../components/Layout';\nconst VIDEOS_QUERY = gql`\n  query VideosQuery{\n    videos {\n      title\n    }\n  }\n`;\n\nconst Index = () => {\n  const {\n    loading,\n    data\n  } = useQuery(VIDEOS_QUERY);\n\n  if (loading || !data) {\n    return __jsx(\"h1\", null, \"loading...\");\n  }\n\n  return __jsx(Layout, null, __jsx(\"h1\", null, \"Home\"), __jsx(\"div\", {\n    className: \"container\"\n  }, data.videos.map(video => __jsx(\"h3\", {\n    key: video.id\n  }, video.title))));\n};\n\nexport default withApollo(Index); // You can also override the configs for withApollo here, so if you want\n// this page to have SSR (and to be a lambda) for SEO purposes and remove\n// the loading state, uncomment the import at the beginning and this:\n//\n// export default withApollo(Index, { getDataFromTree });","map":{"version":3,"sources":["C:/Coding/MyProjects/coders-jukebox/pages/index.js"],"names":["gql","useQuery","withApollo","Layout","VIDEOS_QUERY","Index","loading","data","videos","map","video","id","title"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,UAAP,MAAuB,mBAAvB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,MAAMC,YAAY,GAAGJ,GAAI;;;;;;CAAzB;;AAQA,MAAMK,KAAK,GAAG,MAAM;AAClB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBN,QAAQ,CAACG,YAAD,CAAlC;;AAEA,MAAIE,OAAO,IAAI,CAACC,IAAhB,EAAsB;AACpB,WAAO,+BAAP;AACD;;AACD,SACE,MAAC,MAAD,QACE,yBADF,EAEE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGA,IAAI,CAACC,MAAL,CAAYC,GAAZ,CAAgBC,KAAK,IACpB;AAAI,IAAA,GAAG,EAAEA,KAAK,CAACC;AAAf,KAAoBD,KAAK,CAACE,KAA1B,CADD,CADH,CAFF,CADF;AAWD,CAjBD;;AAmBA,eAAeV,UAAU,CAACG,KAAD,CAAzB,C,CAEA;AACA;AACA;AACA;AACA","sourcesContent":["import gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport withApollo from '../lib/withApollo';\r\n// import { getDataFromTree } from '@apollo/react-ssr';\r\nimport Layout from '../components/Layout';\r\n\r\nconst VIDEOS_QUERY = gql`\r\n  query VideosQuery{\r\n    videos {\r\n      title\r\n    }\r\n  }\r\n`;\r\n\r\nconst Index = () => {\r\n  const { loading, data } = useQuery(VIDEOS_QUERY);\r\n\r\n  if (loading || !data) {\r\n    return <h1>loading...</h1>;\r\n  }\r\n  return (\r\n    <Layout>\r\n      <h1>Home</h1>\r\n      <div className=\"container\">\r\n        {data.videos.map(video => (\r\n          <h3 key={video.id}>{video.title}</h3>\r\n        ))}\r\n      </div>\r\n\r\n    </Layout>\r\n  )\r\n};\r\n\r\nexport default withApollo(Index);\r\n\r\n// You can also override the configs for withApollo here, so if you want\r\n// this page to have SSR (and to be a lambda) for SEO purposes and remove\r\n// the loading state, uncomment the import at the beginning and this:\r\n//\r\n// export default withApollo(Index, { getDataFromTree });"]},"metadata":{},"sourceType":"module"}